To remove folder/directory only from git repository and not from the local try 3 simple commands.

git rm -r --cached FolderName
git commit -m "Removed folder from repository"
git push origin master

Steps to ignore that folder in next commits
To ignore that folder from next commits make one file in root named .gitignore and put that folders name into it. You can put as many as you want
.gitignore file will be look like this:

/FolderName

---------------------

Remove directory from git and local

git rm -r one-of-the-directories
git commit . -m "Remove duplicated directory"
git push origin <your-git-branch> (typically 'master', but not always)

Remove directory from git but NOT local

git rm -r --cached myFolder


---------------------

git config --list
git config --global user.email "{email}"
git config --global user.name "{name}"

---------------------

initializes a new empty Git repository in the current directory, do this from new project folder root
> git init

add all folder contents to newly initialized Git repository
> git add .

commit to repository
> git commit -m "First commit"

go to GitHub and create new repository (matching the current project that was added locally)
using the origin provided by GitHub when the repository was created to do 
> git remote add origin git@github.com:{username}/{repository name}.git
> git push -u origin master



>>> GitHub's create a new repository on the command line

echo "# deleteme" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/daddeo/deleteme.git
git push -u origin master

>>> GitHub's push an existing repository from the command line

git remote add origin https://github.com/daddeo/deleteme.git
git push -u origin master


>>> Reassociate a repository to a different remote
> How can I change the origin remote in VSCode?

1. Go to the root of the directory.
2. List your existing remotes in order to get the name of the remote you want to change.

$ git remote -v
origin  git@github.com:USERNAME/REPOSITORY.git (fetch)
origin  git@github.com:USERNAME/REPOSITORY.git (push)

3. Change your remote's URL from SSH to HTTPS with the git remote set-url command.

$ git remote set-url origin https://github.com/USERNAME/REPOSITORY.git

4. Verify that the remote URL has changed.

$ git remote -v

